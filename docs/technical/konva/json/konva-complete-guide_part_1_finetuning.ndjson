{"messages": [{"role": "system", "content": "Section: Table of Contents\nLevel: H2\nSource: konva-complete-guide.md"}, {"role": "user", "content": "1. [Introduction](#introduction)\n2. [Getting Started](#getting-started)\n3. [Core Concepts](#core-concepts)\n4. [Shapes](#shapes)\n5. [Styling](#styling)\n6. [Events](#events)\n7. [Animation](#animation)\n8. [Drag and Drop](#drag-and-drop)\n9. [Transform](#transform)\n10. [Filters](#filters)\n11. [Performance](#performance)\n12. [Advanced Topics](#advanced-topics)\n13. [Quick Reference](#quick-reference)\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Introduction\nLevel: H2\nSource: konva-complete-guide.md"}, {"role": "user", "content": "Konva is an HTML5 Canvas JavaScript framework that extends the 2d context by enabling canvas interactivity for desktop and mobile applications."}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: What is Konva?\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "Konva enables high performance animations, transitions, node nesting, layering, filtering, caching, event handling for desktop and mobile applications, and much more. You can draw things onto the stage, add event listeners to them, move them, scale them, and rotate them independently from other shapes to support high performance animations, even if your application uses thousands of shapes."}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Installation\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```bash"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Using npm\nLevel: H1\nSource: konva-complete-guide.md"}, {"role": "user", "content": "npm install konva"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Using CDN\nLevel: H1\nSource: konva-complete-guide.md"}, {"role": "user", "content": "<script src=\"https://unpkg.com/konva@10/konva.min.js\"></script>\n```\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Basic Setup\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Create stage\nconst stage = new Konva.Stage({\n  container: 'container-id',  // DOM element ID\n  width: window.innerWidth,\n  height: window.innerHeight\n});\n\n// Create layer\nconst layer = new Konva.Layer();\nstage.add(layer);\n\n// Create shape\nconst circle = new Konva.Circle({\n  x: 100,\n  y: 100,\n  radius: 50,\n  fill: 'red'\n});\n\n// Add shape to layer\nlayer.add(circle);\nlayer.draw();\n```\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Stage\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "The Stage is the container for all layers and shapes in Konva.\n\n```javascript\nconst stage = new Konva.Stage({\n  container: 'container', // id of container <div>\n  width: window.innerWidth,\n  height: window.innerHeight\n});\n```\n\n**Key Properties:**\n- `container` - DOM container ID\n- `width`, `height` - Stage dimensions\n- `scaleX`, `scaleY` - Scaling"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Layer\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "Layers are used to group shapes and can be thought of as transparent sheets.\n\n```javascript\nconst layer = new Konva.Layer();\nstage.add(layer);\n\n// Add shapes to layer\nconst circle = new Konva.Circle({...});\nlayer.add(circle);\n```\n\n**Key Properties:**\n- `x`, `y` - Layer position\n- `scaleX`, `scaleY` - Layer scaling\n- `rotation` - Layer rotation"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Group\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "Groups are containers that can hold other shapes or groups.\n\n```javascript\nconst group = new Konva.Group({\n  x: 100,\n  y: 100,\n  draggable: true\n});\n\n// Add shapes to group\nconst circle = new Konva.Circle({...});\ngroup.add(circle);\nlayer.add(group);\n```\n\n**Key Properties:**\n- `x`, `y` - Group position\n- `scaleX`, `scaleY` - Group scaling\n- `rotation` - Group rotation\n- `draggable` - Enable dragging\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Circle\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst circle = new Konva.Circle({\n  x: stage.width() / 2,\n  y: stage.height() / 2,\n  radius: 70,\n  fill: 'red',\n  stroke: 'black',\n  strokeWidth: 4\n});\n```\n\n**Properties:**\n- `x`, `y` - Position coordinates\n- `radius` - Circle radius\n- `fill` - Fill color\n- `stroke` - Stroke color\n- `strokeWidth` - Stroke thickness"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Rectangle\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst rect = new Konva.Rect({\n  x: 50,\n  y: 50,\n  width: 100,\n  height: 50,\n  fill: 'green',\n  stroke: 'black',\n  strokeWidth: 4,\n  cornerRadius: 10\n});\n```\n\n**Properties:**\n- `width`, `height` - Rectangle dimensions\n- `cornerRadius` - Rounded corners\n- `fill` - Fill color\n- `strokeWidth` - Stroke thickness"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Arc\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst arc = new Konva.Arc({\n  x: stage.width() / 2,\n  y: stage.height() / 2,\n  innerRadius: 40,\n  outerRadius: 70,\n  angle: 60,\n  fill: 'yellow',\n  stroke: 'black',\n  strokeWidth: 4\n});\n```\n\n**Properties:**\n- `innerRadius` - Inner radius of arc\n- `outerRadius` - Outer radius of arc\n- `angle` - Angle of arc in degrees\n- `fill` - Fill color\n- `stroke` - Stroke color"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Arrow\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst arrow = new Konva.Arrow({\n  points: [50, 60, 150, 60],\n  pointerLength: 10,\n  pointerWidth: 10,\n  fill: 'red',\n  stroke: 'black',\n  strokeWidth: 4\n});\n```\n\n**Properties:**\n- `points` - Array of x,y coordinates\n- `pointerLength` - Length of arrow pointer\n- `pointerWidth` - Width of arrow pointer\n- `fill` - Fill color\n- `stroke` - Stroke color"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Line\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst line = new Konva.Line({\n  points: [50, 50, 150, 50, 150, 150, 50, 150],\n  stroke: 'red',\n  strokeWidth: 4,\n  closed: true,\n  tension: 0.5\n});\n```\n\n**Properties:**\n- `points` - Array of x,y coordinates\n- `stroke` - Line color\n- `strokeWidth` - Line thickness\n- `closed` - Close the path\n- `tension` - Create smooth curves\n- `lineCap` - Line cap style\n- `lineJoin` - Line join style"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Text\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst text = new Konva.Text({\n  x: 50,\n  y: 50,\n  text: 'Hello Konva!',\n  fontSize: 24,\n  fontFamily: 'Arial',\n  fill: 'blue',\n  align: 'center'\n});\n```\n\n**Properties:**\n- `text` - Text content\n- `fontSize` - Font size\n- `fontFamily` - Font family\n- `fill` - Text color\n- `align` - Text alignment\n- `verticalAlign` - Vertical alignment"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Image\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nKonva.Image.fromURL('image.png', function(image) {\n  image.setAttrs({\n    x: 50,\n    y: 50,\n    width: 100,\n    height: 100\n  });\n  layer.add(image);\n});\n```\n\n**Properties:**\n- `image` - Image object\n- `width`, `height` - Display dimensions\n- `crop` - Crop dimensions\n- `filters` - Applied filters"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Ellipse\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst ellipse = new Konva.Ellipse({\n  x: stage.width() / 2,\n  y: stage.height() / 2,\n  radiusX: 100,\n  radiusY: 50,\n  fill: 'yellow',\n  stroke: 'black',\n  strokeWidth: 4\n});\n```\n\n**Properties:**\n- `x`, `y` - Position coordinates\n- `radiusX` - Horizontal radius\n- `radiusY` - Vertical radius\n- `fill` - Fill color\n- `stroke` - Stroke color\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Fill\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Solid fill\nshape.fill('red');\n\n// Pattern fill  \nshape.fillPatternImage(imageObj);\n\n// Gradient fill\nshape.fillLinearGradientColorStops([0, 'red', 1, 'yellow']);\nshape.fillLinearGradientStartPoint({x: -50, y: -50});\nshape.fillLinearGradientEndPoint({x: 50, y: 50});\n```"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Stroke\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nshape.stroke('blue');\nshape.strokeWidth(5);\nshape.strokeScaleEnabled(false); // Don't scale stroke with shape\n```"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Opacity and Shadow\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nshape.opacity(0.5);\nshape.shadowColor('black');\nshape.shadowBlur(10);\nshape.shadowOffset({x: 5, y: 5});\nshape.shadowOpacity(0.5);\n```\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Event Types\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "**Mouse Events:**\n- `click` - Mouse click\n- `dblclick` - Double click\n- `mousedown` - Mouse button down\n- `mouseup` - Mouse button up\n- `mouseover` - Mouse enters shape\n- `mouseout` - Mouse leaves shape\n- `mousemove` - Mouse moves\n- `contextmenu` - Right click\n\n**Touch Events:**\n- `touchstart` - Touch starts\n- `touchmove` - Touch moves\n- `touchend` - Touch ends\n- `tap` - Single tap\n- `dbltap` - Double tap\n- `dragstart` - Drag starts\n- `dragmove` - Dragging\n- `dragend` - Drag ends"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Event Handling\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Basic event handling\nshape.on('click', function(evt) {\n  console.log('Circle clicked!');\n  circle.fill('red');\n  layer.draw();\n});\n\n// Multiple events\nshape.on('mouseover', function() {\n  document.body.style.cursor = 'pointer';\n});\n\nshape.on('mouseout', function() {\n  document.body.style.cursor = 'default';\n});\n\n// Remove event listener\nshape.off('click');\n\n// Fire custom event\nshape.fire('customEvent', { data: 'value' });\n```\n\n**Event Object Properties:**\n- `target` - The node that triggered the event\n- `currentTarget` - The node that the listener is attached to\n- `evt.evt` - The original DOM event\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Tween Animation\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst tween = new Konva.Tween({\n  node: circle,\n  duration: 1,\n  x: 200,\n  y: 200,\n  easing: Konva.Easings.EaseInOut\n});\ntween.play();\n```\n\n**Tween Options:**\n- `node` - Target node\n- `duration` - Animation duration in seconds\n- `easing` - Easing function\n- `yoyo` - Yoyo animation (true/false)\n- `repeat` - Number of repeats\n- `onFinish` - Callback when animation completes"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Frame-based Animation\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst anim = new Konva.Animation(function(frame) {\n  // frame.time is the current time in ms\n  // frame.timeDiff is the time difference from the last frame\n  // frame.frameRate is the current frame rate\n  \n  shape.x(Math.sin(frame.time / 1000) * 100);\n}, layer);\n\nanim.start();\n```"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Easing Functions\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "- `Konva.Easings.Linear` - Linear\n- `Konva.Easings.EaseIn` - Ease In\n- `Konva.Easings.EaseOut` - Ease Out\n- `Konva.Easings.EaseInOut` - Ease In Out\n- `Konva.Easings.Bounce` - Bounce\n- `Konva.Easings.Elastic` - Elastic\n- `Konva.Easings.Back` - Back\n- `Konva.Easings.Strong` - Strong\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Basic Drag and Drop\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Simple draggable shape\nconst circle = new Konva.Circle({\n  x: 100,\n  y: 100,\n  radius: 50,\n  fill: 'green',\n  draggable: true\n});\n\n// Custom drag bounds\nrect.dragBoundFunc(function(pos) {\n  return {\n    x: Math.max(0, Math.min(stage.width() - this.width(), pos.x)),\n    y: Math.max(0, Math.min(stage.height() - this.height(), pos.y))\n  };\n});\n```\n\n**Drag Properties:**\n- `draggable` - Enable dragging (true/false)\n- `dragDistance` - Minimum drag distance\n- `dragBoundFunc` - Function to constrain dragging"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Drag Events\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nshape.on('dragstart', function() {\n  console.log('Drag started');\n});\n\nshape.on('dragmove', function() {\n  console.log('Dragging');\n});\n\nshape.on('dragend', function() {\n  console.log('Drag ended');\n});\n```\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Transformer\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nconst transformer = new Konva.Transformer({\n  nodes: [shape],\n  enabledAnchors: ['top-left', 'top-right', 'bottom-left', 'bottom-right'],\n  rotateEnabled: true,\n  resizeEnabled: true,\n  borderEnabled: true,\n  anchorSize: 10\n});\nlayer.add(transformer);\n```\n\n**Transformer Options:**\n- `nodes` - Array of nodes to transform\n- `enabledAnchors` - Which anchors to show\n- `rotateEnabled` - Enable rotation\n- `resizeEnabled` - Enable resizing\n- `borderEnabled` - Show border\n- `anchorSize` - Size of control anchors"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Transform Events\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\ntransformer.on('transformstart', function() {\n  console.log('Transform started');\n});\n\ntransformer.on('transform', function() {\n  console.log('Transforming');\n});\n\ntransformer.on('transformend', function() {\n  console.log('Transform ended');\n});\n```\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Applying Filters\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Apply blur filter\nimage.filters([Konva.Filters.Blur]);\nimage.blurRadius(10);\n\n// Enable/disable blur\nimage.blurEnabled(true);\n\n// Multiple filters\nimage.filters([\n  Konva.Filters.Blur,\n  Konva.Filters.Grayscale\n]);\n```"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Available Filters\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "**Blur:**\n```javascript\nimage.filters([Konva.Filters.Blur]);\nimage.blurRadius(10);\n```\n\n**Grayscale:**\n```javascript\nimage.filters([Konva.Filters.Grayscale]);\nimage.grayscaleEnabled(true);\n```\n\n**Invert:**\n```javascript\nimage.filters([Konva.Filters.Invert]);\nimage.invertEnabled(true);\n```\n\n**Sepia:**\n```javascript\nimage.filters([Konva.Filters.Sepia]);\nimage.sepiaEnabled(true);\n```\n\n**Brightness:**\n```javascript\nimage.filters([Konva.Filters.Brighten]);\nimage.brightness(0.5);\n```\n\n**Contrast:**\n```javascript\nimage.filters([Konva.Filters.Contrast]);\nimage.contrast(0.5);\n```\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Shape Caching\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Cache complex shapes\ncomplexShape.cache();\n\n// Cache with options\nshape.cache({\n  x: -50,\n  y: -50,\n  width: 100,\n  height: 100,\n  offset: 10\n});\n\n// Clear cache when needed\ncomplexShape.clearCache();\n```"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Layer Management\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Disable hit detection for better performance\nlayer.listening(false);\n\n// Don't clear canvas before drawing (if you handle it yourself)\nlayer.clearBeforeDraw(false);\n\n// Batch draw operations\nlayer.batchDraw();\n```"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Best Practices\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "**Do:**\n- Cache complex shapes\n- Batch draw operations\n- Disable hit detection when not needed\n- Use layers effectively\n- Group static content together\n\n**Don't:**\n- Redraw everything - only redraw changed layers\n- Use too many layers\n- Cache everything - only cache complex shapes\n- Create too many individual shapes\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Clipping\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Clip to rectangular region\ngroup.clip({\n  x: 50,\n  y: 50,\n  width: 200,\n  height: 200\n});\n\n// Custom clip function\ngroup.clipFunc(function(ctx) {\n  ctx.arc(0, 0, 100, 0, Math.PI * 2, false);\n});\n```"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Serialization\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Save stage to JSON\nconst json = stage.toJSON();\n\n// Load from JSON\nconst stage = Konva.Node.create(json, 'container');\n\n// Export as image\nstage.toDataURL({\n  mimeType: 'image/png',\n  quality: 0.9,\n  callback: function(dataUrl) {\n    // Use dataUrl\n  }\n});\n```"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Data URL\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\nstage.toDataURL({\n  mimeType: 'image/png',\n  quality: 0.9,\n  pixelRatio: 2, // For high DPI displays\n  callback: function(dataUrl) {\n    // dataUrl contains the base64 encoded image\n  }\n});\n```\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Common Methods\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "**Position & Transform:**\n- `shape.x(100)` - Set x position\n- `shape.y(100)` - Set y position\n- `shape.position({x: 100, y: 100})` - Set both positions\n- `shape.scaleX(2)` - Scale horizontally\n- `shape.scaleY(2)` - Scale vertically\n- `shape.rotation(45)` - Rotate 45 degrees\n- `shape.offset({x: 25, y: 25})` - Set rotation offset\n\n**Styling:**\n- `shape.fill('red')` - Set fill color\n- `shape.stroke('black')` - Set stroke color\n- `shape.strokeWidth(5)` - Set stroke width\n- `shape.opacity(0.5)` - Set opacity (0-1)\n- `shape.visible(false)` - Hide shape\n- `shape.shadowColor('black')` - Set shadow color\n- `shape.shadowBlur(10)` - Set shadow blur\n\n**Animation:**\n- `shape.to({x: 200})` - Animate to new state\n- `shape.to({duration: 1})` - Set animation duration\n- `shape.to({easing: Konva.Easings.EaseIn})` - Set easing function\n- `shape.to({yoyo: true})` - Yoyo animation\n- `shape.to({repeat: 2})` - Repeat animation\n- `shape.stop()` - Stop current animation\n- `shape.cache()` - Cache for performance\n\n**Layer Methods:**\n- `layer.add(shape)` - Add shape to layer\n- `layer.remove(shape)` - Remove shape from layer\n- `layer.draw()` - Redraw layer\n- `layer.batchDraw()` - Batch draw for performance\n- `layer.clear()` - Clear layer content\n- `layer.listening(false)` - Disable hit detection\n- `layer.getChildren()` - Get all children\n\n**Stage Methods:**\n- `stage.add(layer)` - Add layer to stage\n- `stage.getPointerPosition()` - Get mouse position\n- `stage.toDataURL()` - Export as image\n- `stage.toJSON()` - Serialize to JSON\n- `Konva.Node.create(json)` - Create from JSON\n- `stage.width(800)` - Set stage width\n- `stage.height(600)` - Set stage height\n\n**Utility Methods:**\n- `shape.getAttr('fill')` - Get attribute value\n- `shape.setAttr('fill', 'red')` - Set attribute value\n- `shape.getAttrs()` - Get all attributes\n- `shape.setAttrs({...})` - Set multiple attributes\n- `shape.clone()` - Clone shape\n- `shape.destroy()` - Remove and destroy\n- `shape.zIndex(5)` - Set z-index"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Event Handling\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "```javascript\n// Add event listener\nshape.on('click', function(e) {\n  console.log('Clicked!');\n});\n\n// Remove event listener\nshape.off('click');\n\n// Fire custom event\nshape.fire('customEvent', { data: 'value' });\n```"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Performance Tips\nLevel: H3\nSource: konva-complete-guide.md"}, {"role": "user", "content": "**Optimization Techniques:**\n- Cache complex shapes: `complexShape.cache()`\n- Batch draw operations: `layer.batchDraw()`\n- Disable hit detection: `layer.listening(false)`\n- Use layers effectively\n- Group static content together\n\n**Things to Avoid:**\n- Don't redraw everything - only redraw changed layers\n- Avoid too many layers\n- Don't cache everything - only cache complex shapes\n- Minimize shape count - use groups for complex objects\n\n---"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
{"messages": [{"role": "system", "content": "Section: Resources\nLevel: H2\nSource: konva-complete-guide.md"}, {"role": "user", "content": "- [Official Konva.js Documentation](https://konvajs.org/docs/)\n- [API Reference](https://konvajs.org/api/)\n- [Examples and Demos](https://konvajs.org/docs/demos/)\n- [GitHub Repository](https://github.com/konvajs/konva)\n\n---\n\n*This guide covers all major aspects of Konva.js. For the most up-to-date information, always refer to the official documentation.*"}, {"role": "assistant", "content": "This documentation has been reviewed and is ready for reference."}]}
